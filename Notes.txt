  
  
   HTML => Hyper text mark up language (mark the content as certain text as bold,italic) language
   
   => tags
   
    -> HTML was invented by Sir Time Berners Lee in late 1990's
	-> develop static web pages
	-> it can be saved with ".htm" or ".html"
	
	 Visual Studio Code => Open source
	 
	 how we can execute the html? 
	 Browsers : GC , Edge , Opera , Mozilla
	 
	 how we can apply styles to web page ?
	 
	 -> CSS(cascading style sheets)
	    Color
		Margin
		Padding
		Border
		
		Live Server extension
		Lorem ipsum extension
		
		
		<></> => tag syntax
		
		<!DOCTYPE html> => <!-- HTML 5-->
        <!DOCTYPE>  => <!-- HTML 4-->	

         Structure of Web Page

          Version of HTML/doctype

          root section 
               => head section
			       metadata 
               => body section
                   content of web page 

        <title>

        Html Tags and attributes

        <meta><meta/>		
		
		attributes => provides additional information about the tag(id="metaTag" name="metaTag")
		
		 Assignment 
		 
		1) Open Editor
		2) Write Some text(Head and Body)
		3) Apply formatting 
		4) Add Paragraphs(p) and line breaks(<br/>)
		5) Create some text and apply styles
		
		=> Work with text related Tags
		=> Work with Images
		=> Work with Links
		=> Work with Tables
		=> Work with frameset, div and span 
		=> Work with Forms
		=> HTML5 New Tags : Other tags
		
		Work with Text Related Tags 
		
		1. Heading Tags : h1 , h2 , h3 , h4 , h5 , h6 
		2. Font related tags : font , i(italic) , b(bold) , u(underline) , s(strike out) , small 
		3. List Tags : ordered list(ol,li) and unordered list 
		4. Other tags : pre
		    Semantic Tags 
		
		  <hr> => Draw horizontal line 
		  Semantic Tags 
		    <h1> This is Header </h1>
			<header> This is Header </header>
			<p> 
			<footer> This is Footer </footer>
		    
		Work With Images 
		
		<img > => unpaired tag 
		<img />
		<meta>
		
		https://developer.mozilla.org/en-US/docs/Web/HTML
		
		Work with Links
		
		anchor tag 
		
		<a for redirections
		
		Work with Tables 
		
		<table>
		   <caption></caption>
		   
		 2 parts table header and table body
		 
		 <thead> <th></th> </thead>
		 
		 cellpadding is inside the cell content 
		 
		 cellspacing is outside the cell (gap between one cell to another )
		 
		 50.23*22.5 + 51.99*22.5 => 104.23 * 22.5 
		 
================================15-11-2023========================================
	
        Git 

         its a repository 

         session => discuss => implement changes -> co ordinate 

         central place => repository 
		 
		 https://github.com/ => create an account

          user1 => pull the code from repo => will changes => test the requirement 	
		  
		  Install Git for windows
		  https://git-scm.com/download/win
		  https://gitforwindows.org/
		  1. Create a repository 
		  2. Pull that repository
		     git clone https://github.com/RuthvikSai2015/UIFullStackBatchNovember.git
		  3. Branches => Master(copy of production) , release(Production) , development
		  
		     development => unit testing 
			 release => QA for testing 
			 master/release => Production 
			 
		  4. git diff => changes visibility
		  5. git commit -m "Name: Savitha ,  id: 2345 ,  message:added notes to the git"
		  6. git push
		  
		      create a branch
			  git branch -b <branch_name>
			  git push --set-upstream origin development
			  
			  
			  
==============================17-11-2023==========================================

        
		form => grouping the elements into single elements
		
		        alphanumeric , number , checkbox , buttons
				
	    1.form
		2.label
		3.input
		
		Get => data is not encrypted
		Post => Form Data is encrypted and sent to server
		
		https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input
		
		email , password , search , datepicker, upload , button 
		submit button , reset button , radio button , checkbox, dropdown
		
		textarea
		
		Assignment :-> complete form with labels and input types
		
========================20-11-2023======================================

      Frames 
	    are used to divide your browser window into multiple sections where each section
		can be 	loaded as seperate HTML Documents
		
      <frame> tag is not supported in HTML5
	  <iframe>
	  <frameset> tag is not supported in HTML5
	  
	  <input type="text" >          <!-- Text Field -->
	  <input type="number">         <!-- Number Field -->
	  <input type="email">          <!-- Email Field -->
	  <input type="password">       <!-- Password Field -->
	  <input type="search">         <!-- Search Field -->
	  <input type="date">           <!-- Date Field -->
	  <input type="file">           <!-- File Upload button-->
	  <input type="submit">         <!-- Submit button -->
	  <input type="reset">          <!-- Reset button -->
	  <input type="button">         <!-- Empty Button -->
	  <input type="radio">          <!-- Radio button -->
	  <input type="checkbox" >      <!-- Checkbox -->
	  <input type="url" >           <!-- Url --> 
	  
============================21-11-2023===========================================

http://127.0.0.1:5500/post?firstName=&lastName=&email=&password=&contact=&location=indiranagar


http://127.0.0.1:5500/post?user-name=&firstName=&lastName=&email=&password=&contact=&location=indiranagar

========================================22-11-2023=================================

  <label for="element_id">
  
   ids => unique to browser
   name => unique to server
   
   HTML5 new tags 
   
   <input type="time">
   <input type="url">
   <input type="week">
   <input type="search">
   <input type="number" value="1" min="1" max="10" step="0.5">
   <input type="month">
   <input type="email">
   <input type="datetime-local">
   <input type="color">
   
   Tag           Description
   =========================================
   <article>     Defines a article in a document
   <figure>      Defines Self-contained content 
   <footer>      Defines a footer for a document
   <header>      Defines a header for a document
   <main>        Defines the Main Content of the document 
   <section>     Defines a section in a document 
   <mark>        Defines Marked/Highlighted text 
   <nav>         Defines Navigation Links
   <summary>     Defines a visible heading for details element
   <aside>       Defines the main relatable content of the document
   <time>        Defines Time to be displayed  
   <audio>       to play audio in the document
   <video>       to display video in the document 
   
   https://developer.mozilla.org/en-US/docs/Glossary/semantics
   
    SVG and Canvas 
	
	Canvas 
	=> used for drawing 
	<canvas> javascript => learn javascript 
	
	SVG 
	=> Scalabale Vector Graphics 
	=> SVG is used to define graphics for the web 
	=> The HTML <svg> elemnet is a container for SVG Graphics
	=> drawing boxed , circles , text , graphics and images
	
	2D graphics in XML
	
	https://codepen.io/winkerVSbecks/pen/wrZQQm
		
	 <!-- Draw a line using polygon-->
    <!-- Design Logo -->
    <!-- Assignment -->
	
==============================27-11-2023=======================================

      CSS => Cascading Style Sheets
	  
	  textbox: mobile:50px*30px => laptop:80px*50px
		Bootstrap , Tailwind , Skeleton , Foundation

      approaches to apply css 
 
     1. Internal
     2. External 
     3. Inline Style 	 
		
		<p> Lets Learn CSS</p>
		
		style = " property : value"
		
		text-align : center
		background-color: blue
		height
		width
		font-family 
		font-weight
		
		Short hand property in css 
		
		background , border , padding , margin
		
		border: size type color
		       :2px solid black
		border : green 
		
		padding : 10px 5px 2px 3px		
		          top right bottom left
				  t  r b l
				  
===================================28-11-2023==================================

         2) Internal CSS => group of elements
		 
		    tag{
			     property1:value,
				 property2:value,
				 
				 propertyn: valuen;
			}
			
			p{            p,img{
			
			}             }
			
	     3) External 
		 
		   external css .css using link 
		   
		 Precedence of CSS
		 
		 1. Style Attribute 
		 2. Internal 
		 3. External 
		 
		 Override the precedence just write property:value !important
		 
	
	Types of Selectors in CSS
	
	1. Element Selector (tag) 
	
	   Ex: element1{ property: value} 
	   
	2.Id Selector => user defined ids
	
	     <h1 id="h1id">Header 1</h1>
         <h1 id="h2id">Header 2</h1>
         <h1 id="h3id">Header 3</h1>
		 
		 #id{
		      property : value
		 }
		 
		 #h1id,#h3id{
		      border:3px solid red;
	     }
		 
	3. Class Selector
       
        .className1{property:value}	  

    4.Universal Selector		html=>body=> elements
	
	    *{
		
		}
		
		div and span tags 
		
		div is a block level element
		span is inline level
		
=========================01-12-2023============================

      Pseudo classes 
	  
	  4 stages
	  a : link {color :blue}
	  a : hover {color:green}
	  a: visited {color:red}
	  a: active {color:brown}
	  
	  display property change 
	  inline display property we cannot change the height and width of element
	  
	  change the height and width of element with display inline
	  change the display property inline-block
	  
	  display:none 
	  
	  display: flex
	  display: grid
	
============================04-12-2023===========================

     Flexbox layout module aims at providing more efficient way of layout,align and 
	 distribute the space among items in a container 
	 
	 https://css-tricks.com/snippets/css/a-guide-to-flexbox/
	 
	 flex-direction
	 
======================05-12-2023===================================

     Flex-box => content gets auto adjusted 
	 
	 resize and show , it fits accordingly 
	 
	 Display : grid 
	 
	 CSS Grid Layout enables user to align the elements into columns and rows 
	 
	 grid-column : column start / column end
     grid-row : row start / row end 		 
		
		
 =======================06-12-2023===============================
 
     Position : property specifies how an element is positioned in a document 
	 
	 top , left , bottom right properties 
	 
	 static , relative , fixed , absolute and sticky 
	 
	 default position static 
	 
	 relative position : gets adjusted away from its normal position
	 
	 absolute position: gets adjusted according to parent element 
	 
	 Sticky position sets the position according to parent element
	 
	 fixed position sets the elements according to Document
	 
	 box-shadow property 
	 
	 box-shadow: xoffset yoffset blur spread color:
	 
=======================08-12-2023=================================================

       Bootstrap 
	   
	   https://getbootstrap.com/docs/5.0/getting-started/introduction/
	   
	   content delivery network => cdn 
	   
	   central server => 
	   
==========================11-12-2023==================================
	   
	   getbootstrap.com install bootstrap
	   
	   getting locally => received updates
	   
	   content delivery network (CDN) is a system of distributed servers
	   
	   Internet and speed is mandatory 
	   
	   https://getbootstrap.com/docs/5.0/utilities/colors/
	   
	   Display property 
	   
	   d-lg-none
	   
	   .d-{value} the devices xs=> extra small , sm => small , md=> medium 
	   
	   position : top left center margin padding 
	   
	   mx-2 => margin x=> left and right 2 px margin 
	   
	   px-2 => padding apply both the sides
	   
==========================12-12-2023==============================================

       size : 1368 * 725 
	   
	   Carousel Images
	   
	   take 4 images span across the page
	   4 in larger devices
	   2 in medium devices
	   1 in smaller devices 
	   
	   small devices => 1 image 1 card=> 12
	   medium devices => 2 images 2 cards=> 6 6 
	   large devices => 4 images 3 cards=> 4 4 4
	   
	   layouts => container => rows and columns 
	   
===========================13-12-2023==========================================

      Google fonts
	  
	     <link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Tangerine">
		
		  body {
               font-family: 'Tangerine', serif;
               font-size: 48px;
         }
		 
		 font - awesome icons 
		 <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
		 
		  fa fa-facebook 
		  
===========================15-12-2023================================================

         MongoDb
		 ExpressJS
		 React
		 NodeJs
		 
		 Next JS, Vue JS => Javascript 
		 
		 is a Client Side Scripting Language
		 
		 High Level and Interpreted Language
		 
		 High Level Language is written in simple english language statement where the user
		  can understand 
		  
		 Interpreted Language is ready to run as soon as you are done typing
		 
		 developed by Brendan Eich => Netscape communication Corporations
		 
		    ECMA(European Computers Manufacturer Association) rules was followed by javascript 
		  
		  1992 a web browser called mosiac 
		  
		  1993 by NSAC
		  
		  1995's Netscape Corporation
		  
		  NSAC and Netscape release a browser called Mozilla(Mosiac and Godzilla)
		  
		  Static web pages 
		  
		  HTML alone will be enough to the job 
		  
		  Scripting need to do 
		  
		  Mocha Script => Intial version of javascript renamed as Livescript 
		  
		  finally JavaScript 
		  
		  1995 it was standarised 
	  
	      ECMA Script 
		  
		  ES1 , ES2 ......ES6 is known as TypeScript
		  
		  ========================================================================
		  
		  How Javascript works?
		  
		   with respective of each browser , the vendor given a plugin in the browser
		   i.e javascript engine 
    
	       
			Browser	Name of Javascript Engine
			Google Chrome	V8
			Edge (Internet Explorer)	Chakra
			Mozilla Firefox	Spider Monkey
			Safari	Javascript Core Webkit
			
		https://en.wikipedia.org/wiki/JavaScript_engine
		
		Traditional JavaScript
		1) Form Validation like text , email , pwd
		2) Dynamically show data
		3) Prepare some alert or confirmation box
	    4) Display current date and time
		
		Novel Javascript used to prepare server side logics
		
		1. OTP Creation , Sending and verification
		2. Phone Email Notification
		3. Chat Box
		4. Email and Password Validation
		5. Forgot Password 
		
		Advantages :
		
		Dynamic typed language 
	      int age                   var age ;
		  float height              var height;
		  
		It supports Exception handling , threading , regular expression
		
		Client Side Validation + Server Side Validation
		
	==========================================================================
	
	  How many ways we can write and test our javascript code?
	  
	  1. browser console
	  2. Inside HTML Code <script> tag
	  3. Seperate Javascript code in a file(.js)
	  
	   <script src="test.js"/>
	   
	   1. Single Line Comment //
	   2. Multi Line Comment  /* */
	   
	   Keywords are reserved words in a language because they are reserved for specific purpose 
	   
	   46 keywords in Javascript 

        https://www.programiz.com/javascript/keywords-identifiers
		
	  Q. Tokens in Javascript 
	  
	    1. What is Literal?
		2. What is an Identifier ?
		3. What is Variable and how to declare it?
		4. What is Constant and how to declare it?
		5. What is Data Type and types of data types
		6. What is an Operator and types of Oerator
		7. Control Statement and types of control statement
==============================================================================

        Literals
		
		Literal => Item stored in a register 
		Identifier => name given to register 
		
		Variable => A variable is a register which literal/value can be varied
		
		Constant => is a register which literal/value cannot be changed
		
		how do we decide the size? 
		
		25 => integer
		  o25 => octal 
		  0x25 => hexadecimal
		  0b10101 => binary
		  
		  data type of literal? size 
		  
		  "Apple" 'Apple' []
		
		Rules for declaring the Identifer 
		
		Rule 1: An identifier should be an combination of following character set-upstream
		
		      1. combination of alphabets - A-Z , a-z
			  2. Digits: 0-9
			  3. Special Symbols : _(underscore), $(symbol)
			  
		Rule 2: Identifier should not start with digit
        Rule 3: An Identifier should not be a keyword	
        Rule 4: Multiple Identifiers should be seperated with comma 
                 var fname="savitha",lname="ramesh";
				 
===============================================================================

        var / const => keyword to declare an identifier 
		
		Syntax:
		
		var/const identifierName;
		
		var studentAge; // valid
        var subject1; // valid
		var 1subject; //Rule 2
		var student_gender; // valid
		var _city; //valid
		var student_height;  //valid
        var #hNo; // Rule 1
		var course1,course2,course3; // valid
		var if,else,var; // Rule 3
		var if,while,var,let ; //Rule 3
		
		18% GST => const 
		
		var productPrice 
		
		const gst=18;
		const gravity = 9.8;
		var productOilPrice=120;
		
		const always comes with the initialization whereas var is not
		
		Javascript is dynamically typed language 
		
		java int a= 10; a = "java";
		
		var a =10; a = "java"
		
==========================20-12-2023========================================

        Req1: store your family member ages 
		      
			  var personAge1=32;
			  var personAge2=28;
			  var personAge3=43;
			  
			  primitive data type   int boolean string
			  
			  non primitive data type var personAge = [32,28,43] arrays, objects
			  
			  primitive data types are basic data types
			  non primitive data types are derived data types
			  
       Operators
	   
	   c = a + b ; // Expression (a,b,c)
	   
	   1. Expression is a collection of Operands and Operators 
	   2. Operators are used between operands to perform specific operation
	   
	   3 types of expression
	   Expr1    a++      Single Operand(Unary Operator)
       Expr2    a+b      Two Operand (Binary Operator)
       Expr3    a?b:c	 Three Operands(Ternary Operator)
	   
	   8 operators
	   
	   1. Increment and Decrement Operators(++,--)
	   2. Minus(-)
	   3. Arithmetic Operators(*,-,/,+)
	   4. Assignment Operator(=)
	   5. Relational Operator(<,>,>=,<=,!=,!==,===)
	   6. Logical Operators(&&,||,!)
	   7. Bitwise Operators(&,|,^,~,<<,>>)
	   8. Conditional Operators(?,:)
	   
	   1 & 2 (Unary Operators)
	   3 4 5 6 7(Binary Operator)
	   8 (Ternary)
		
		1. ++ can be used pre or post operand
		
		++a => pre increment => a = a+1;
		--a => pre decrement => a = a-1;
		
		ex: var x=45;
		    console.log(++x); //46
			
			var x=40;
			console.log(++x + ++x);
			             41 + 42
						 
	    ex: var x= 40;
		    console.log(--x + --x); // 77
			
	Post Increment
	
	a++ = post increment => (a+1)
	a-- = post decrement => (a-1)
	
	ex: var x=45;
	    clg(x++); //45
		clg(x); //46
		
    ex: var x=40;
	    clg(x++ + x++); 40 + 41 => 81
	    clg(x); //42
			
		
	Minus(-) changes the sign of the number 
	
	a=6 -a => -6
-------------------------------------------------------------------------
	
	Arithmetic
	
	a=10 , b=3;
	a+b = 13
	a-b = 7
	a*b = 30
	a/ b = 3.3333333333333335
	
	Assignment Operator 
	
	var x=200;
	console.log(x=x+100); //300
	console.log(x); //300
	
	shorthand operation in js
	
	x+=100; // x = x+100;
	x/=100 // x = x/100;
	x-=100 // x = x-100;
	x*=100 // x = x*100;
	
	Relational Operators 
	(<,>,>=,<=,!= , == , === , !==)
	
	x=5;
	(x++ + --x + ++x + x--) // 21 or 22 
	
	=> given your mail id and database mail id 
	
	savi1.ruthvik@gmail.com  db: savi.ruthvik@gmail.com
	(==) operator 
	
	if(user.emailid == database.emailid) // true
	   allow user to login 
	 otherwise 
	   not allow or ask to reenter 
	
	All Relational Operators will give boolean values true or false
	
	if(userCode = rccCode) // valid or not
	
	a!=b = true
	a==b(compare) a=b(assignment) 
	
	Logical Operators 
	
	This Operator used to check more than one condition and returns boolean value 
	
	If i toss one coin how many possibilities? 2
	If i toss two coind how many possibilities ? 4
	
	var b1=true , b2 = false, b3=true;
	
	    console.log(b1 && b2) ;  // false 
		console.log(b1 && b3) ;  // truw
		console.log(b1 && b2 && b3);//left to right output false 
		console.log(b1 || b2); //true
		console.log(b1 || b3); //true
		console.log(b1 || b2 || b3); //true 
		console.log(b1 || b2 && b3); //true
		console.log(b1 || b2);
		console.log(!b3);
		
		https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
		
		//console.log(b1 || b2 && !b3);
		
		+ , - , / ,* BODMAS 
		
===========================================21-12-2023==================================
		
		N = 14 
		Binary Representation 
		32   16   8   4   2    1 
		0     0   1   1   1    0
		
		N = 25 
		0    1    1   0   0   1
		
		Binary to Decimal 
		N= 101
		32   16  8  4  2  1
		0    0   0  1  0  1 => 5
		
		N= 1010
		10
		
		used between 2 bits
		
		var a = 12, b = 7 , c = 10, d =40;
		
		a & b => 12 1100 0111 
		a | b =>
		a ^ b =>
		
		      1 1 0 0 
		      0 1 1 1
		---------------
		a & b 0 1 0 0 => 4
		a | b 1 1 1 1 => 15
		a ^ b 1 0 1 1 => 11
		
		~ => complement the value change the sign and add1 12 (~a) => -13
		
		<< , >>
		
		10 << 2 => n << s => n*2^s                       =>  1 0 1 0       n*2^s
		           10 << 2 => 10 * 2^2 => 10 * 4 = 40    =>  1 0 1 0 0 0 
				   10 << 3 => 80
				   
		10 >> 2 => n >> s => n/2^s => 10/4 => 2          => 1 0 1 0 
		           10 >> 3 => 10/8 =>                    => 0 0 1 0        n/2^s
				   
				   
		var a = 12 , b = 7;
		
		console.log(a+~b+1)     12 +(-8) + 1  12-8+1 12-8+1 => 5 
		
		console.log(a-~b+1)    12 - (-8) + 1 12+8+1 12+9 => 21
		
		ternary operator ?,: 
		
		if(condition){
		
		     stmt1;
			 
		}else{
		    stmt2;
		}
		
		Syntax :
		   Condition ? stmt1 : stmt2
		   
		   var num = 88;
		   if(num>0){
		      clg(positive);
			 }else{clg(negative);
			 
			num > 0 ? 'Positive':'Negative';
			
	Task : Check given number is even or odd
		
==================================26-12-2023=================================

     Task: Calculate the area of circle 
	 
	      pi*radius*radius 
		  
		PS1: find the area of circle 
		
		     const pi=3.14;
			 
			 var radius , areaOfCircle;
			 
			 radius = -3.6;
			 
			 areaOfCircle = pi * radius * radius
			 
			 console.log(areaOfCircle);
			 
		so radius = -3.6 ? 
		
		console.log(radius>0? pi*radius*radius:"Area cannot be calculated for negative number");

     Task : Find Simple Interest =? PTR/100;
	 
=========================================================================

      Control Statements 
	  
	  console.log('Hi1');
	  console.log('Hi2');
	  console.log('Hi3');
	  console.log('Hi4');
	  console.log('Hi5');
	  console.log('Hi6');
	  console.log('Hi7');
	  console.log('Hi8');
	  console.log('Hi9');

      line by line execution 

     1. Decision Making Statements
	 
	    if 
		if-else
		nested-if-else
		switch 
		
     2. Loop Statements
	     while
		 do-while
		 for
     3. Jump Statements	 
	    break 
		continue
		
		if(condition) //true evaluate once / expression is true evaluate once
		{
		   stmt1;  
		}
		else{
		   stmt4,
		}
		
		if(true){
		   console.log('Hi1');
		}
	    if(false){
		   //statements will not be executed 
		}
		
		
		https://nodejs.org/en/download
		
		node -v => version of node installed 
		16.17.0
		
		Nested If Else 
		
		if else ladder
		
		var num = 8;
		
		       num between 0 to 10 is 1 digit
			               10 to 100 is 2 digit
                           100 to 1000 is 3 digit 

       if(num >=0 && num < 9 ){
         clg("1 digit number");
       } else if(num >=10 && num < 100){
	     clg("2 digit number ");
	   } else if(num >= 100 && num < 1000){
	     clg("3 digit number");
	   }
	   
	   Nested If Else 
	   
	   if (condition1){
	            if(condition2){
					  if(condition3){
					  
					  }
				} 
	   }
	   checkValue a & b 
	   
	   if( a == 1)
	     if( b == 2 )
		   clg("a is 1 and b is 2 ")
	   else
		   clg("a is not 1");
		   
	  if(a==1 && b==2)
	  
	PS2: Take 6 Students Subject Marks and calculate total,average and percentage 
	  
	   var s1=50,s2=70
	   
	   s1+s2+s3+s4+s5+s6 = total/6 average 
	  
	  Print Grade of subjects based on percentage 
	   
	  Print 'A' grade if percentage is above 70 
	  Print 'B'  grade if percentage is between 60 & 70
	  Print 'C' grade if percentage is between 60 and 50
	  Print 'D' grade if the percentage is below 50 
	  
===================================27-12-2023============================
	  
	  Switch
	  
	  switch is used to prepare menu driven programming
	  
	  Switch , case , break , default 
	  
	  Switch => used to prepare all cases
	  Case => used to prepare functionality for each case
	  break => used to stop the functionality 
	  default => default functionality 
	  
	  syntax:
	      switch(userChoice){
		  
		   case label1: statements;
		                break;
		   case label2: statements;
		                break;
		   ........
		   case labeln: statements;
	                    break;
		   default labelx: statements;
		                   break;
		}
		
		break: used to stop the execution
		
		PS3: // One more example
        // + , -  , / , * num1 num2
		
	2. Loop Statements 
	
	   If you want to repeat some set of statements with finite number of times 
	   then we go for loops 
	   
	   for 
	   
	   infinite number of times 
	   
	   while
	   do-while 
	   
	   All the loop are formed based on following factors
	   
	   1.Loop beginning point
	   2.Loop ending point
	   3.Loop Statements
	   4.Inc/Dec
	   
	                                 1,2.....10            10,9,......1
	   1.Loop beginning point          i=1                   i=10
	   2.Loop ending point             i<=10                 i>=1
	   3.Loop Statements               clg(i)                 clg(i)
	   4.Inc/Dec                        i++                   i--
	   
	   10,12,14......40
	   9,7..........1
	   3,6.........30
	   
	   initilaization , condition 
	   
	   syntax:
	   
	  1. while(condition){               1,3,5,7,9
	      statements;                  while(i<10)
		  inc/dec;                     {
	   }                                 clg(i);
	                                     i+=2; //i=i+2
	                                    }
										
										
	     process.stdout.write(i+' '); //OOPJS to write data horizontally to the console
		 result appended the data 
		 
		 
		2.do{
		
		     statements;
			 inc/dec;
			}while(condition)
			
			
	    3. For Loop
		   syntax:
		   
		      for(initilization;condition;inc/dec){
			    //set of statements
			  }
			  
			  1 2 3 4 6 7 8 9 10
			  
	  PS4: Ashokit => $sho$it //  i%4 == 0 
	  
	      output += $;
		  else 
		  output += c; // character at that place 
		  
==============================01-01-2024==========================================

       Math Class Methods
	   
	   sin(90)
	   tan(45)
	   cos(0)
	   sqrt(64)
	   pow(2,3)
	   abs(7)
	   
	   1.declare all the inputs and outputs variables
	   2.Assign some values to input variables
       3.Perform business logics
	   4.Write the Final Result on console or wherever required 
	   
	   Drawbacks:
	   
	   1. Space and complexity
	   2. Readability 
	   3. Modularity
	   
	   Functional Programming 
	   
	   function function_name(parameters){
	   
	     //function set of statements 
		
       }

        Advantages of Functional Programming

       1. No Duplication of Code
       2. Less space and less complexity (one function one task)
       3. More readibility
	   4. Modularity
	   5. Extensibility is simple 
	   
	     called function => function add(){}
		 calling function => add()
		 
		 
		1.Function Declaration
		2.Function Expression
		3.Arrow Functions
		4.IIFE
		5.Nested Functions
		
		use of "function " keyword
		Argument list and paramater list 
		
		
	Type 1: With parameter list and with return value
	Type 2: With parameter list and without return value
	Type 3: Without parameter list and with return value 
	Type 4: Without parameter list and without return value 
	
	//wihtout parameter list 
	function doSum(){
	
	     var num1,num2,addResult;
		 num1=20;
		 num2=40;
		 addResult = num1+num2;
		 console.log(addResult);
		 
	}
	doSum(); //1000 times 
	
	function doSum(num1,num2){
	
	  return num1+num2;
		 
	}
	function add(num1,num2){
          console.log(num1+num2);
    }
	doSum(45,35);
	doSum(90,40);
	doSum(70,40);
	
	function PI(){
	
	  return  3.14; // Math.PI
	  
	}
	
	Assignment : Perform Total,Average and grade of 6 subject marks for 6 students
	
	              Total(-,-,-,-,-,-) average(-,-,-,-,-,-) , grade(-)
				  
				  function averageMarks(s1,s2,s3,s4,s5,s6){
				    var result;
					result=total(s1,s2,s3,s4,s5,s6)/6;
					return result;
				  }
				  function grade(s1,s2,s3,s4,s5,s6){
				  
				   result = averageMarks(s1,s2,s3,s4,s5,s6);
				   if(result < 70)
				     grade='A';
					 
				  }
				  
------------------------02-01-2024-----------------------------------

        1.Function Declaration 
				
				  //called function
				  function function_name(paramlist){
				     //set of statements
					 //return value 
				  }
				  //calling function 
				  function_name(arglist);
				  
		2.Function Expression 
		
              = operator has to come immediately 
             called function
                var function_name = function(paramlist){

                     //set of statements
                     //return value 
                 }	

              calling function
              function_name(arglist);
			  
		Type 1 , remaining Types as assignment with function expression

        5.Nested Functions are functions inside function 

           function averageMarks(html,css,js){

				function totalMarks(html,css,js){   //private to the function averageMarks
					return (html+css+js);
				}
				 return totalMarks(html,css,js)/3;
			 }		
			 
		4.Arrow Functions => most advanced way of preparations
		    =>
	      called function		
		  let function_name = (paramlist) => {
		     //set of statements
			 //return vallue
			
		  }
		  calling function
		  function_name(arglist);
		  
		  //Arrow function with single parameter and without return value 
		  
		   let cube = (num) => {
		      console.log(Math.pow(num,3);
		   }
           //Arrow function with single parameter and with return value 
		   
		   let cube = num => {
		       return Math.pow(num,3);			   
			}
			let cube = num => Math.pow(num,3);	
			
	    4.IIFE(Immediately Invoked function expression) 
		
		  Called Function + Calling Function 
		  
		   (function(paramlist){
		   
		     //set of statements return value 
			 
			})(arglist);
			
		 step1 : () () ;
		          called function
				     calling function 
					
=======================03-01-2024===================================================

        Arrays 
		
		   function doSomething(){
		      let person1Age = 25;
			  let person2Age = 32;
			  let person3Age = 45;
		   }
		   
		   let personAges = [25,22,45,50];
		   
		  What is Array?
		    Array is used to store multiple elements in single variable
		  how to create array?
		  length property 
		  how to access Array Elements ?
		  how to modify Array Elements?
		  const Arrays
		  Array Methods
		    push(),pop(),shift(),unshift()
			splice() // json objects
			concat(),sort(),slice()
			indexOf,lastIndexOf()
			map(),filter(),some()
			
	    create an array 
		
		approach1 : let array1=[];
        approach2:  let array1 = new Array();
		
		const personAges = [25,22,45,50,45,20,60];
		personAges[5]=55;

		console.log(personAges);

		personAges = [25,40,32,80]; // not valid 
		
		with const we cannot re - assign the whole array
		
		we can modify any index value 
		
		Array Methods:
	-------------------------------------------------------------------------
	    push() => insert elements at end of the array 
		pop() => remove elemens at the end of the array
		unshift() => insert elements at beginning of the array
		shift() => remove elemens at the beginning of the array
		
		concat()
		
		indexOf() => will return -1 if element is not existing 
		
		lasIndexOf() = return from right to left 
		
==========================04-02-2024============================
		
		Map and Filter 
		
		var numbers = [10,20,30,40,50,60];
		
		// 1.Add value 2 to each number in printArray 
		// 2.Sum of elements = 210 
		// 3.return the elements greater than 35 => 40 50 60 
		
		//1. iterate loop and add create a new array 
		
		1.map() 
		2.reduce()
		3.filter()
		
		splice() 
		 1. adding element into array
		 2. removing element from array 
		 
		 
		syntax : 
		
		var removedElements = splice(startIndex, removedCount , newItem1, newItem2, newItem3 , ..........);

        splice method returns elements which are deleted from array;
		
		Array Packing and Unpacking 
		
		let a = 10;
		let b = true;
		let c = 'Apple';
		let array1 = [a,b,c] // array packing 
		
		//unpacking 
		var x , y , z;
		[x,y,z]= array1;
		
		-------------------------------------------------------------
		
		3.Strings 
		
		  => array of characters 
		  
		  String can be created in 2 ways
		  1. let mystring = 'Apple';
		  2. let mystring = new String('Apple');
		  
		  String can be represented in 3 ways
		  1. Using Single quotes ('')
		  2. Using double quotes("");
		  3. Using Back tick(above tab and under esc key `)
		  
		  using back ticks we can bind expression in strings 
		  
		  String methods 
		  
=======================================16-01-2024===========================

         let a = 10;
		 
		 4.Boolean 
		 
		 let a = true ;
		 
		 if(10 > 1){
		 
		 }
		 
		 5.Undefined
		 
		   let a ;
		   
		   typeof(a) //undefined 
		   
		 6. null 
		 
		 let user = null;	
		 
		  typeof(user); //object
		  
		  In javascript null means "reference to an existing object "
		 
   7.  Object

      let user = {};
         
      let user = {
	      name : "rakesh",
		  age : 10,
		  id : 123;
	  }	

==============================================================================

        Javascript Objects

      Objects => Collection of various data types 

          { key : value }
          key => string 

      How to declare a object?
	  
	  1. let user = new Object(); //Object Constructor 
	  2. let user = {};

      delete is used only with objects 
	  
	  Array of Ojects 
	  
	  [{},{},{}]
	  
	   let users = [
				   {
				name:"rakesh",
				id:123,
				age:31
			}
			{
				name:"rakesh",
				id:123,
				age:31
			}
			{
				name:"rakesh",
				id:123,
				age:31
			}
			{
				name:"rakesh",
				id:123,
				age:31
			}
			{
				name:"rakesh",
				id:123,
				age:31
			}
	   ]
	  
	  https://jsonplaceholder.typicode.com/comments 
	  
	  Print id with name 
	  Print email with id
	  
	  For in and For of Loops 
	  
	  Objects For..in Loop
	  Arrays For..of loop 
         
===========================17-01-2024================================

     We need to change the DOM => Javascript 
	 
	 html : prepare DOM
	 CSS : Look and feel for DOM
	 JS : Manipulation of DOM 
	 
	   onClick = "fun()"
	   ondblClick = "fun()"
	   onmouseenter = "fun()"
	   onmouseleave = "fun()"

    Assignment : Cube of a Number
	             EMI Calculator 
        
		  
		  
		  
		  

		
		

		
			
			
	    

				  
				  
	
		
		
		
		
		
	   
	  
		
	
	